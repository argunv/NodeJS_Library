#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Library Catalog API
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000

BASE_URL="http://localhost:3001"
API_URL="$BASE_URL/api"

echo "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Library Catalog API"
echo "=================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "${BLUE}=== $1 ===${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
check_response() {
    local response="$1"
    local expected_status="$2"
    local test_name="$3"
    
    if echo "$response" | grep -q "HTTP/1.1 $expected_status"; then
        echo -e "${GREEN}‚úÖ $test_name - –£—Å–ø–µ—à–Ω–æ${NC}"
    else
        echo -e "${RED}‚ùå $test_name - –û—à–∏–±–∫–∞${NC}"
        echo "–û—Ç–≤–µ—Ç: $response"
    fi
    echo ""
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
print_header "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Health Endpoint"
response=$(curl -s -w "HTTP/1.1 %{http_code}\n" "$BASE_URL/api/health")
check_response "$response" "200" "Health Check"

# 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
print_header "2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
register_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X POST "$API_URL/auth/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "password123",
    "name": "Test User"
  }')

echo "–û—Ç–≤–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:"
echo "$register_response" | head -n -1
echo ""

# –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞
TOKEN=$(echo "$register_response" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)

if [ -z "$TOKEN" ]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${TOKEN:0:20}...${NC}"
echo ""

# 3. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
print_header "3. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
login_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X POST "$API_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "password123"
  }')

echo "–û—Ç–≤–µ—Ç –≤—Ö–æ–¥–∞:"
echo "$login_response" | head -n -1
echo ""

# 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
print_header "4. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
profile_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/auth/profile" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è:"
echo "$profile_response" | head -n -1
echo ""

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
print_header "5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"
create_book_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X POST "$API_URL/books" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{
    "title": "The Great Gatsby",
    "author": "F. Scott Fitzgerald",
    "isbn": "978-0-7432-7356-5",
    "description": "A classic American novel about the Jazz Age",
    "publishedAt": "1925-04-10T00:00:00.000Z"
  }')

echo "–û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏:"
echo "$create_book_response" | head -n -1
echo ""

# –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∫–Ω–∏–≥–∏
BOOK_ID=$(echo "$create_book_response" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)

if [ -z "$BOOK_ID" ]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–Ω–∏–≥–∏${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ ID –∫–Ω–∏–≥–∏: $BOOK_ID${NC}"
echo ""

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏
print_header "6. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏"
create_book2_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X POST "$API_URL/books" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{
    "title": "To Kill a Mockingbird",
    "author": "Harper Lee",
    "isbn": "978-0-06-112008-4",
    "description": "A novel about racial injustice and childhood innocence",
    "publishedAt": "1960-07-11T00:00:00.000Z"
  }')

echo "–û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π –∫–Ω–∏–≥–∏:"
echo "$create_book2_response" | head -n -1
echo ""

# 7. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
print_header "7. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥"
get_books_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥:"
echo "$get_books_response" | head -n -1
echo ""

# 8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –ø–æ ID
print_header "8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –ø–æ ID"
get_book_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books/$BOOK_ID" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥–∏:"
echo "$get_book_response" | head -n -1
echo ""

# 9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
print_header "9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏"
update_book_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X PUT "$API_URL/books/$BOOK_ID" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{
    "title": "The Great Gatsby (Updated)",
    "description": "An updated description of this classic novel"
  }')

echo "–û—Ç–≤–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏:"
echo "$update_book_response" | head -n -1
echo ""

# 10. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥
print_header "10. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥"
search_books_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books?search=gatsby&limit=5" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥:"
echo "$search_books_response" | head -n -1
echo ""

# 11. –¢–µ—Å—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
print_header "11. –¢–µ—Å—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
unauth_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books")

echo "–û—Ç–≤–µ—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:"
echo "$unauth_response" | head -n -1
echo ""

# 12. –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
print_header "12. –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º"
invalid_token_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books" \
  -H "Authorization: Bearer invalid-token")

echo "–û—Ç–≤–µ—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º:"
echo "$invalid_token_response" | head -n -1
echo ""

# 13. –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
print_header "13. –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏"
delete_book_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X DELETE "$API_URL/books/$BOOK_ID" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏:"
echo "$delete_book_response" | head -n -1
echo ""

# 14. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
print_header "14. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏"
check_deleted_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X GET "$API_URL/books/$BOOK_ID" \
  -H "Authorization: Bearer $TOKEN")

echo "–û—Ç–≤–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è:"
echo "$check_deleted_response" | head -n -1
echo ""

# 15. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
print_header "15. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
validation_response=$(curl -s -w "HTTP/1.1 %{http_code}\n" -X POST "$API_URL/books" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{
    "title": "",
    "author": "Test Author"
  }')

echo "–û—Ç–≤–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:"
echo "$validation_response" | head -n -1
echo ""

echo -e "${GREEN}üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo ""
echo -e "${YELLOW}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
echo "- –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 15"
echo "- –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints"
echo "- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
echo "- –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"
echo "- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏"
echo ""
echo -e "${BLUE}üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000/api-docs${NC}"
